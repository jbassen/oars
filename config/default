##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# proxy hosts
upstream event_hosts {
        server <PRIVATE_EVENT_IP:EVENT_PORT>;
# what you would do if you have a second event server to balance...
        server <PRIVATE_EVENT_IP2:EVENT_PORT>;
}

# content hosts
upstream content_hosts {
        server <PRIVATE_SITE_IP:SITE_PORT>;
}

# @ / WWW HTTP CONNECTIONS
# set temporary redirect from http to https
server {
        listen 80 default_server;
        listen [::]:80 default_server;

    	location ~ /.well-known {
    		allow all;
    	}

        server_name <YOUR_TLD> www.<YOUR_TLD>;
        return 302 https://$server_name$request_uri;
}

# @ HTTPS CONNECTIONS
# set temporary redirect from @ to www
server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        include snippets/<YOUR_TLD>.conf;
        include snippets/ssl-params.conf;
        server_name <YOUR_TLD>;

        location ~ /.well-known {
                allow all;
        }

        location / {
                return 302 https://www.<YOUR_TLD>$request_uri;
        }
}

# WWW HTTPS CONNECTIONS
server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        include snippets/ssl-<YOUR_TLD>.conf;
        include snippets/ssl-params.conf;

        root /var/www/html;

        index index.html index.htm index.nginx-debian.html;

        server_name _;

        # Jon: Required for Let's Encrypt SSL verification
        # from: https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04
        location ~ /.well-known {
                allow all;
        }
        # proxy connections
        location /edx/events {
                proxy_set_header HOST $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_pass https://event_hosts;
        }
        location / {
                proxy_set_header HOST $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_pass https://content_hosts;
        }
}
